package javaapplication2;

import java.util.Random;

public class BinaryTree {
	static Node root;
	static int maxLevel = 0;

	public static void main(String[] args) {
		Random r = new Random();
		for (int i = 0; i < 10; i++) {
			addNode(r.nextInt(50), root);
		}
		printer(root);
	}

	public static void setMaxHeight(int level) {
		if (level > maxLevel)
			maxLevel = level;
	}

	public static void addNode(int nodeValue, Node currentNode) {
		if (root == null) {
			root = new Node(nodeValue, 0);
			return;
		}
		if (nodeValue > currentNode.Key) {
			if (currentNode.right == null) {
				setMaxHeight(currentNode.level + 1);
				currentNode.right = new Node(nodeValue, currentNode.level + 1);
				return;
			} else {
				currentNode = currentNode.right;
				addNode(nodeValue, currentNode);
			}
		}

		if (nodeValue < currentNode.Key) {
			if (currentNode.left == null) {
				setMaxHeight(currentNode.level + 1);
				currentNode.left = new Node(nodeValue, currentNode.level + 1);
				return;
			} else {
				currentNode = currentNode.left;
				addNode(nodeValue, currentNode);
			}
		}
	}

	private static void printer(Node root) {
		for (int i = 0; i <= maxLevel; i++) {
			printTree(root, i);
			System.out.println("");
		}
	}

	private static void printTree(Node root, int level) {

		if (root.level == level) {
			System.out.print(root.Key + " ");
		}
		if (root.left != null)
			printTree(root.left, level);

		if (root.right != null)
			printTree(root.right, level);

	}
}
